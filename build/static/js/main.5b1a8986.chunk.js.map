{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/Person.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","onSubmit","name","number","onNameChange","onNumberChange","type","Persons","persons","delPerson","map","person","className","key","onClick","window","confirm","id","baseUrl","axios","get","then","response","data","newPerson","post","put","res","delete","Notification","message","Error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterName","setFilterName","notifyMessage","setNotifyMessage","errorMessage","setErrorMessage","deletedNames","setDeletedNames","useEffect","personService","initPersons","personsToShow","filter","search","event","target","preventDefault","duplicatePersons","trim","length","updatedPerson","people","pe","catch","err","concat","setTimeout","per","copy","ind","findIndex","pl","delCopy","push","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b1a8986.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filter:\n      <input value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmit,\n  name,\n  number,\n  onNameChange,\n  onNumberChange\n}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={name} onChange={onNameChange} />\n      </div>\n      <div>\n        number: <input value={number} onChange={onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm","  import React from \"react\";\n\nconst Persons = ({ persons, delPerson }) => {\n  return (\n    <>\n      {persons.map(person => (\n        <li className='person' key={person.name}>\n          {person.name} {person.number}\n          <button\n                  onClick={() => {\n                    if(window.confirm(`Are you sure you want to delete ${person.name}?`)){\n                    delPerson(person.id)}\n                  }}\n                >\n                  Delete\n                </button>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default Persons","import axios from \"axios\"\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response=> response.data)\n}\n\n\nconst create = newPerson => {\n  return axios.post(baseUrl, newPerson).then(response=>response.data)\n}\n\nconst update = (id, newPerson) => {\n  return axios.put(`${baseUrl}/${id}`, newPerson).then(res => res.data)\n}\n\nconst del = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\n\nexport default {getAll,create,update, del}\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notify\">\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","import React from \"react\";\n\nconst Error = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  export default Error","import React, { useState, useEffect } from \"react\"\n\nimport Filter from \"./components/Filter.js\"\nimport PersonForm from \"./components/PersonForm.js\"\nimport Persons from \"./components/Persons.js\"\nimport personService from './services/Person.js'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [filterName, setFilterName] = useState(\"\")\n  const [notifyMessage, setNotifyMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [deletedNames, setDeletedNames] = useState([])\n\n  useEffect(() => {\n    personService.getAll().then(initPersons => {\n      setPersons(initPersons);\n    });\n  }, []);\n\n  const handleNewNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterNameChange = event => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDelPerson = id => {\n    if (persons.filter(per => per.id === id).length) {\n      personService.del(id)\n      const copy = [...persons]\n      const ind = copy.findIndex(pl=> pl.id === id)\n      const delCopy = [...deletedNames]\n      delCopy.push(copy[ind].name)\n      setDeletedNames(delCopy)\n      setPersons(copy.filter(p => p.id !== id))\n      setNotifyMessage(`Deleted`) \n    }\n    else {\n      setErrorMessage(\"Already deleted\")\n    }\n  }\n\n  const handleNewPersonSubmit = event => {\n    event.preventDefault()\n    const duplicatePersons = persons.filter(\n    person => person.name === newName.trim())\n      if (duplicatePersons.length) {\n        if(window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)){\n          const updatedPerson = {\n            name: newName.trim(), number: newNumber.trim()}\n          const id = duplicatePersons[0].id\n          personService.update(id, updatedPerson).then(people => {\n            setPersons(\n              persons.map(pe => {\n                return pe.id === people.id ? people : pe;\n              }),\n              setNotifyMessage(\n                `${updatedPerson.name} was updated`),\n                setNewName(\"\"),\n                setNewNumber(\"\")\n              )}).catch(err => {\n                setPersons(persons.filter(person => {\n                    return person.id !== id;\n                  })\n                )\n                setErrorMessage(\n                  `${newName}  has already been deleted`)\n                })\n              }\n            }\n            \n      else {  \n      const newPerson = {\n        name: newName.trim(), number: newNumber.trim()\n      }\n      personService.create(newPerson)\n      .then(response => {\n      setPersons(\n        persons.concat(response))\n      setNewName(\"\")\n      setNewNumber(\"\")\n      setNotifyMessage(\n        `${newPerson.name} was added`\n      )\n      setTimeout(() => {\n        setNotifyMessage(null)\n      }, 5000)\n    })}}\n\n\n  const personsToShow = filterName\n    ? persons.filter(person => person.name.search(filterName) !== -1)\n    : persons;\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notifyMessage} />\n      <Error message={errorMessage} />\n\n      <Filter value={filterName} onChange={handleFilterNameChange} />\n\n      <PersonForm\n        onSubmit={handleNewPersonSubmit}\n        name={newName}\n        number={newNumber}\n        onNameChange={handleNewNameChange}\n        onNumberChange={handleNewNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons persons={personsToShow} delPerson={handleDelPerson} />\n    </div>\n  )\n  }\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}